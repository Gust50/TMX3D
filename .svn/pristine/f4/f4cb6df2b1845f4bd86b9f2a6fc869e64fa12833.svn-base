//
//  TMXMainReplyCell.m
//  TMX3DPrinterHD
//
//  Created by kobe on 16/11/2.
//  Copyright © 2016年 kobe. All rights reserved.
//

#import "TMXMainReplyCell.h"
#import "TMXHomeModelDetailModel.h"
#import "TMXSubReplyCell.h"


@interface TMXMainReplyCell ()<UITableViewDelegate,UITableViewDataSource>
@property (nonatomic, strong) UIImageView *icon;
@property (nonatomic, strong) UILabel *userNameLab;
@property (nonatomic, strong) UILabel *timeLab;
@property (nonatomic, strong) UIButton *replyBtn;
@property (nonatomic, strong) UILabel *contentLab;
@property (nonatomic, strong) UIView *showImg;
@property (nonatomic, strong) UILabel *replyUserNamesLab;
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, assign) CGFloat tableViewH;
@end

@implementation TMXMainReplyCell
static NSString *const subReplyCellID=@"subReplyCellID";

-(UIImageView *)icon{
    if (!_icon) {
        _icon=[UIImageView new];
        _icon.image = [UIImage imageNamed:@"Icon"];
    }
    return _icon;
}

-(UILabel *)userNameLab{
    if (!_userNameLab) {
        _userNameLab=[UILabel new];
        _userNameLab.font = [UIFont systemFontOfSize:14];
        _userNameLab.text = @"小黄人";
    }
    return _userNameLab;
}

-(UILabel *)timeLab{
    if (!_timeLab) {
        _timeLab=[UILabel new];
        _timeLab.font = [UIFont systemFontOfSize:11];
        _timeLab.text = @"今天 12：30";
        _timeLab.textColor = RGBColor(181, 181, 181);
    }
    return _timeLab;
}

-(UIButton *)replyBtn{
    if (!_replyBtn) {
        _replyBtn=[UIButton new];
        _replyBtn.titleLabel.font = [UIFont systemFontOfSize:13];
        [_replyBtn setTitle:@"回复" forState:UIControlStateNormal];
        [_replyBtn setTitleColor:systemColor forState:UIControlStateNormal];
    }
    return _replyBtn;
}

-(UIView *)showImg
{
    if (!_showImg) {
        _showImg = [UIView new];
    }
    return _showImg;
}

-(UILabel *)contentLab{
    if (!_contentLab) {
        _contentLab=[UILabel new];
        _contentLab.font = [UIFont systemFontOfSize:13];
        _contentLab.numberOfLines = 0;
        _contentLab.text = @"旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力旅客的骄傲覅偶哇塞凉快的说服力";
    }
    return _contentLab;
}

-(UILabel *)replyUserNamesLab
{
    if (!_replyUserNamesLab) {
        _replyUserNamesLab = [UILabel new];
        _replyUserNamesLab.font = [UIFont systemFontOfSize:11];
        _replyUserNamesLab.text = @"嗅虎科技回复了此评论。";
    }
    return _replyUserNamesLab;
}

-(UITableView *)tableView{
    if (!_tableView) {
        _tableView=[[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStylePlain];
        _tableView.delegate=self;
        _tableView.dataSource=self;
    }
    return _tableView;
}


-(instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{
    if (self==[super initWithStyle:style reuseIdentifier:reuseIdentifier]) {
        [self initUI];
    };
    return self;
}

-(void)initUI{
    [self addSubview:self.icon];
    [self addSubview:self.userNameLab];
    [self addSubview:self.timeLab];
    [self addSubview:self.replyBtn];
    [self addSubview:self.contentLab];
    [self addSubview:self.replyUserNamesLab];
    [self addSubview:self.showImg];
    [self addSubview:self.tableView];
    
    self.lastviewInCell=self.tableView;
    self.bottomOffsetToCell=5.0;
    self.tableViewH=0.0;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _mainReplyModel.commentReplyList.count;
}
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    TMXSubReplyCell *subReplyCell=[tableView dequeueReusableCellWithIdentifier:subReplyCellID forIndexPath:indexPath];
    TMXHomeModelDetailCommentSubListModel *tempModel=[_mainReplyModel.commentReplyList objectAtIndexCheck:indexPath.row];
    subReplyCell.subReplyModel=tempModel;
    return subReplyCell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
       TMXHomeModelDetailCommentSubListModel *tempModel=[_mainReplyModel.commentReplyList objectAtIndexCheck:indexPath.row];
    CGFloat h=[TMXSubReplyCell heightForTableView:tableView config:^(UITableViewCell *cell) {
        TMXSubReplyCell *subReplyCell=(TMXSubReplyCell *)cell;
        subReplyCell.subReplyModel=tempModel;
    } cache:^NSDictionary *{
        return @{cacheUniqueKey:@"",cacheStateKey:@"",recalculateForStateKey:@(NO)};
    }];
    return h;
}

#pragma mark <getter setter>
-(void)setMainReplyModel:(TMXHomeModelDetailCommentMainListModel *)mainReplyModel{
    _mainReplyModel=mainReplyModel;
    _contentLab.preferredMaxLayoutWidth=self.width-10;
    CGFloat tableViewHeight=0.0;
    for (TMXHomeModelDetailCommentSubListModel *tempModel in mainReplyModel.commentReplyList) {
        
        CGFloat cellHeight=[TMXSubReplyCell heightForTableView:_tableView config:^(UITableViewCell *cell) {
            TMXSubReplyCell *subReplyCell=(TMXSubReplyCell *)cell;
            subReplyCell.subReplyModel=tempModel;
        } cache:^NSDictionary *{
            return @{cacheUniqueKey:@"",cacheStateKey:@"",recalculateForStateKey:@(NO)};
        }];
        tableViewHeight+=cellHeight;
    }
    
    _tableViewH=tableViewHeight;
    [self setNeedsUpdateConstraints];
}

-(void)updateConstraints{
    [super updateConstraints];
    WS(weakSelf);
    [_icon mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(weakSelf.mas_top).with.offset(10);
        make.left.equalTo(weakSelf.mas_left).with.offset(10);
        make.size.mas_equalTo(CGSizeMake(45, 45));
    }];
    
    [_userNameLab mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(_icon.mas_centerY).with.offset(-3);;
        make.left.equalTo(_icon.mas_right).with.offset(8);
        make.size.mas_equalTo(CGSizeMake(120, 15));
    }];
    
    [_timeLab mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(_icon.mas_right).with.offset(8);
        make.top.equalTo(_icon.mas_centerY).with.offset(3);
        make.size.mas_equalTo(CGSizeMake(160, 15));
    }];
    
    [_replyBtn mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(weakSelf.mas_right).with.offset(-10);
        make.centerY.equalTo(_icon.mas_centerY);
        make.size.mas_equalTo(CGSizeMake(60, 35));
    }];
    
    [_contentLab mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(weakSelf.mas_left).with.offset(10);
        make.right.equalTo(weakSelf.mas_right).with.offset(-10);
        make.top.equalTo(_icon.mas_bottom).with.offset(5);
//        make.height.mas_equalTo(@(20));
    }];
    
    [_replyUserNamesLab mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(_contentLab.mas_bottom).with.offset(10);
        make.left.equalTo(weakSelf.mas_left).with.offset(10);
        make.right.equalTo(weakSelf.mas_right).with.offset(-10);
        make.height.mas_equalTo(@(15));
    }];
    
    if (/* DISABLES CODE */ (1)) {
        [_showImg mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(weakSelf.mas_left).with.offset(5);
            make.right.equalTo(weakSelf.mas_right).with.offset(-5);
            make.height.mas_equalTo(@(120));
        }];
        
        [_tableView mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(_showImg.mas_bottom).with.offset(5);
            make.left.equalTo(weakSelf.mas_left).with.offset(5);
            make.right.equalTo(weakSelf.mas_right).with.offset(5);
            make.height.mas_equalTo(@(_tableViewH));
        }];
    }else{
        [_tableView mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(_replyUserNamesLab.mas_bottom).with.offset(5);
            make.left.equalTo(weakSelf.mas_left).with.offset(5);
            make.right.equalTo(weakSelf.mas_right).with.offset(5);
            make.height.mas_equalTo(@(_tableViewH));
        }];
    }
    
    
}



@end
